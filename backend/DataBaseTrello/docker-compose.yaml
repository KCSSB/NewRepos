services:
  backend:
    image: back
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      #redis:
      #  condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
      #- REDIS_CONNECTION=${REDIS_CONNECTION} 
      #- REDIS_INSTANCE_PREFIX=${REDIS_INSTANCE_PREFIX}    
      - ASPNETCORE_ENVIRONMENT=Development
      - PGSSLMODE=Disable 

  db:
    image: postgres:17.0
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
  # redis:
  #     image: redis:latest
  #     ports:
  #        - "6379:6379"
  #     healthcheck:
  #            test: ["CMD", "redis-cli", "ping"]
  #            interval: 5s
  #            timeout: 10s
  #            retries: 5

  frontend:
    build:
      context: ../../frontend/dontask_react
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ../../frontend/dontask_react:/app
      - /app/node_modules
      
volumes:
  db-data: